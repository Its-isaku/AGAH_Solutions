# Generated by Django 5.2.4 on 2025-08-13 05:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(default='AGAH Solutions', help_text='AGAH Solutions', max_length=100)),
                ('contact_email', models.EmailField(help_text='Contact email for the company', max_length=254)),
                ('company_phone', models.CharField(help_text='Contact phone number for the company', max_length=150)),
                ('company_address', models.TextField(help_text='Contact address for the company')),
                ('about_us', models.TextField(help_text='About us section for the company')),
                ('company_mission', models.TextField(blank=True, help_text='Company mission statement')),
                ('company_vision', models.TextField(blank=True, help_text='Company vision statement')),
                ('company_time_response_hours', models.IntegerField(default=24, help_text='Average response time in hours')),
            ],
            options={
                'verbose_name_plural': 'Company Configurations',
            },
        ),
        migrations.CreateModel(
            name='TypeService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, help_text='Type of service offered (auto-generated from name)', max_length=50, unique=True)),
                ('name', models.CharField(help_text='Name of the service type', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Description of the service type')),
                ('short_description', models.CharField(blank=True, help_text='Short description of the service type', max_length=200)),
                ('base_price', models.DecimalField(blank=True, decimal_places=2, help_text='Base price for the service type', max_digits=10, null=True)),
                ('principal_image', models.ImageField(blank=True, help_text='Principal image for the service type', null=True, upload_to='service_images/')),
                ('active', models.BooleanField(default=True, help_text='If active show the service type in the frontend')),
                ('order_display', models.IntegerField(default=0, help_text='Order display for the service type (auto-assigned)')),
                ('is_base_service', models.BooleanField(default=False, help_text='Indicates if this is one of the 5 base services')),
            ],
            options={
                'verbose_name': 'Type of Service',
                'verbose_name_plural': 'Types of Services',
                'ordering': ['order_display', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(blank=True, help_text='Unique order number for the order', max_length=20, unique=True)),
                ('customer_name', models.CharField(help_text='Name of the customer placing the order', max_length=100)),
                ('customer_email', models.EmailField(help_text='Email of the customer placing the order', max_length=254)),
                ('customer_phone', models.CharField(help_text='Phone number of the customer placing the order', max_length=15)),
                ('state', models.CharField(choices=[('pending', 'Pending'), ('estimated', 'Estimated - waiting for confirmation'), ('confirmed', 'Confirmed by the customer'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('canceled', 'Canceled')], default='pending', help_text='Current state of the order', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the order was created')),
                ('estimaded_price', models.DecimalField(blank=True, decimal_places=2, help_text='Automated estimated price for the order', max_digits=10, null=True)),
                ('final_price', models.DecimalField(blank=True, decimal_places=2, help_text='Final price for the order', max_digits=10, null=True)),
                ('estimated_completion_date_days', models.IntegerField(blank=True, help_text='Estimated completion time in days', null=True)),
                ('additional_notes', models.TextField(blank=True, help_text='Additional notes for the order')),
                ('assigned_user', models.ForeignKey(blank=True, help_text='User assigned to the order', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_orders', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, help_text='User who placed the order (optional for guest orders)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(help_text='Description of the service the consumer wants')),
                ('design_file', models.FileField(blank=True, help_text='Design file for the order item', null=True, upload_to='design_files/%Y/%m/')),
                ('quantity', models.IntegerField(default=1, help_text='Quantity of the service the consumer wants')),
                ('length_dimensions', models.DecimalField(blank=True, decimal_places=2, help_text='Length of the design in inches', max_digits=8, null=True)),
                ('width_dimensions', models.DecimalField(blank=True, decimal_places=2, help_text='Width of the design in inches', max_digits=8, null=True)),
                ('height_dimensions', models.DecimalField(blank=True, decimal_places=2, help_text='Height of the design in inches', max_digits=8, null=True)),
                ('estimated_unit_price', models.DecimalField(blank=True, decimal_places=2, help_text='Estimated unit price for the order item', max_digits=8, null=True)),
                ('final_unit_price', models.DecimalField(blank=True, decimal_places=2, help_text='Final unit price for the order item', max_digits=8, null=True)),
                ('needs_custom_design', models.BooleanField(default=False, help_text='Indicates if this item needs custom design service')),
                ('custom_design_price', models.DecimalField(blank=True, decimal_places=2, help_text='Price for custom design service for this specific item', max_digits=8, null=True)),
                ('plasma_design_programming_time', models.IntegerField(blank=True, default=60, help_text='Design and programming time in minutes (minimum 60)', null=True)),
                ('plasma_cutting_time', models.IntegerField(blank=True, default=30, help_text='Cutting time in minutes (minimum 30)', null=True)),
                ('plasma_post_process_time', models.IntegerField(blank=True, default=60, help_text='Post-process time in minutes (minimum 60)', null=True)),
                ('plasma_material_cost', models.DecimalField(blank=True, decimal_places=2, help_text="Material cost for 4'x8' plate", max_digits=8, null=True)),
                ('plasma_consumables', models.DecimalField(blank=True, decimal_places=2, default=162.3, help_text='Consumables cost (default 162.30)', max_digits=8, null=True)),
                ('laser_design_programming_time', models.IntegerField(blank=True, default=30, help_text='Design and programming time in minutes (minimum 30)', null=True)),
                ('laser_cutting_time', models.IntegerField(blank=True, default=10, help_text='Cutting time in minutes (minimum 10)', null=True)),
                ('laser_post_process_time', models.IntegerField(blank=True, default=10, help_text='Post-process time in minutes (minimum 10)', null=True)),
                ('laser_material_cost', models.DecimalField(blank=True, decimal_places=2, help_text="Material cost for 4'x8' sheet", max_digits=8, null=True)),
                ('laser_consumables', models.DecimalField(blank=True, decimal_places=2, default=30.0, help_text='Consumables cost (default 30.00)', max_digits=8, null=True)),
                ('printing_design_programming_time', models.IntegerField(blank=True, default=60, help_text='Design and programming time in minutes (minimum 60)', null=True)),
                ('printing_time', models.IntegerField(blank=True, default=30, help_text='Printing time in minutes (minimum 30)', null=True)),
                ('printing_material_used', models.DecimalField(blank=True, decimal_places=2, help_text='Material used in grams', max_digits=8, null=True)),
                ('printing_post_process_time', models.IntegerField(blank=True, default=60, help_text='Post-process time in minutes (minimum 60)', null=True)),
                ('printing_material_cost', models.DecimalField(blank=True, decimal_places=2, default=350.0, help_text='Material cost per 1Kg roll (default 350.00)', max_digits=8, null=True)),
                ('printing_consumables', models.DecimalField(blank=True, decimal_places=2, default=30.0, help_text='Consumables cost (default 30.00)', max_digits=8, null=True)),
                ('order', models.ForeignKey(help_text='Order to which this item belongs', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='services.order')),
                ('service', models.ForeignKey(help_text='Type of service requested', on_delete=django.db.models.deletion.CASCADE, to='services.typeservice')),
            ],
            options={
                'verbose_name': 'Order Item',
                'verbose_name_plural': 'Order Items',
            },
        ),
    ]
